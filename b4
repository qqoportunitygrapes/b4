def func1(arg1, arg2):
    var33 = func2(arg1, arg2)
    var36 = class5()
    for var37 in xrange(25):
        var38 = var36.func6
        var38(var37, arg1)
    var53 = func7(arg1, arg2)
    var76 = var56(arg1, var33)
    var84 = var79(var76, var53)
    var85 = (arg1 + ((var84 ^ (var84 | arg2 - ((arg1 ^ 721784634) ^ -1445418050 | var53 + ((-368 & arg1) ^ var33) + var84 & var84 | arg2 - var53) | -591 - var53) ^ arg1) - var53) - arg2) & var76 | -818527091
    result = (-564 & var53 - var85) | arg2 + var84
    return result
def func13(arg80, arg81):
    var82 = ((-1875541571 + ((arg80 | ((134 ^ arg81) | arg81 + arg81)) | arg80 - (arg80 | 868 + (2083774891 - ((arg80 + -368401437) - 421232861))) & ((2118311176 - arg81) ^ arg80 & -1730524559)) - arg80) + arg81 & arg80) ^ arg80 & arg80
    var83 = arg81 + 1073971801 & (arg80 ^ var82 & -649 | (-1364715788 - (arg81 - arg80 + (((var82 & (1004075127 & arg80) & arg81 & arg81 | 1963567083) - arg80) & var82 - (var82 & var82 + var82 ^ arg81 + arg81) & arg80))))
    result = (arg80 | (-1317416673 - arg81 - (arg81 + var83 + var83 ^ 800920933) | arg81 + var82 + var82)) + arg80 ^ arg81
    return result
def func12():
    closure = [4]
    def func11(arg77, arg78):
        closure[0] += func13(arg77, arg78)
        return closure[0]
    func = func11
    return func
var79 = func12()
def func10(arg57, arg58):
    var59 = (arg58 - -779 | 1662861699) + arg58
    var60 = (361 + (856 + var59)) & -525
    if arg58 < var59:
        var61 = (698913467 + -1859036569 | var60) & 386
    else:
        var61 = var60 - (var59 & var60) - arg58
    var62 = arg57 + arg57
    var63 = (var62 + -35546710 | var59) - var62
    var64 = (var63 & arg58) ^ arg57 - arg57
    var65 = arg58 & arg58
    var66 = (var64 + var64 - arg58) | var60
    var67 = 1655480028 | arg58
    var68 = -193333525 + arg58 ^ var62 ^ var60
    var69 = (492 ^ var67) + var60 | arg58
    var70 = (var66 ^ var69) | arg58
    var71 = (var62 & var69 | 343616421) & var69
    var72 = var69 & var68 & (var71 | var66)
    var73 = arg57 | var69 ^ var70 - var67
    var74 = var70 ^ (var65 & var73 & var71)
    var75 = var67 + var68 & var65
    result = arg57 + var69
    return result
def func9():
    closure = [8]
    def func8(arg54, arg55):
        closure[0] += func10(arg54, arg55)
        return closure[0]
    func = func8
    return func
var56 = func9()
def func7(arg39, arg40):
    var41 = (arg39 | 654) & -494 + 1158329574
    var42 = 1707302351 ^ (arg39 | var41)
    var43 = (882 ^ arg40) + (562 - arg39)
    var44 = var42 | arg40
    var45 = (arg39 - var43 - var41) ^ var41
    var46 = arg39 + var44
    var47 = var41 & (-556 ^ (var46 | -143943599))
    var48 = 832 - (var42 + var45)
    var49 = (1267161174 ^ -564 & arg39) + arg39
    var50 = arg40 - var43 + arg39 | 1234560966
    var51 = var48 | var44
    var52 = (149860527 ^ (var46 ^ arg40)) ^ var45
    result = var45 ^ 342229
    return result
class class5(object):
    def func6(self, arg34, arg35):
        return 0
def func4(arg5, arg6):
    var7 = (698641886 & arg5) | arg6 & arg6
    var8 = -31 - -209
    var9 = ((var8 & var7) | var7) - var7
    if arg5 < var9:
        var10 = (-267 ^ 1826433018) + 459
    else:
        var10 = var7 | var8
    var11 = var7 - -1785267180 ^ -391 & -564839780
    if var9 < arg6:
        var12 = arg5 ^ var11
    else:
        var12 = arg6 & (var8 - (var7 ^ arg5))
    var13 = (var7 & var8) | var11
    var14 = var9 + (var8 - -1690964082 + 675)
    var15 = -176670242 & var11
    if var7 < arg6:
        var16 = var11 ^ var11
    else:
        var16 = (var7 | arg6) - arg6
    var17 = -829 + -142
    var18 = ((var8 & arg6) + var13) + var7
    var19 = -1214986828 + (var11 | var17) | -748384980
    var20 = var18 - var11 & (var8 - var11)
    var21 = var18 & var17 | arg6
    var22 = (var20 | var7 + var19) & var7
    var23 = (var19 - (var22 ^ var8)) & var21
    var24 = var7 ^ (var11 & -149457707) ^ 719
    if var22 < var22:
        var25 = var9 ^ var17
    else:
        var25 = var8 ^ (var23 ^ var19)
    var26 = var15 | var23
    var27 = var21 + var26
    var28 = var19 - 547065215 | var24
    var29 = ((var18 | var20) ^ var26) - var22
    var30 = (var8 - (var20 & var18)) + 97
    var31 = var8 & (var13 - var27)
    result = var23 - var11
    return result
def func2(arg3, arg4):
    def func3(acc, rest):
        var32 = func4(-1, rest)
        if acc == 0:
            return var32
        else:
            result = func3(acc - 1, var32)
            return result
    result = func3(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 86'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
